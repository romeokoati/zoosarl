{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { apiUrl } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar OrderService = /** @class */function () {\n  function OrderService(http) {\n    this.http = http;\n    this.orderUrl = \"\".concat(apiUrl, \"/order\");\n  }\n  OrderService.prototype.getPage = function (page, size) {\n    if (page === void 0) {\n      page = 1;\n    }\n    if (size === void 0) {\n      size = 10;\n    }\n    return this.http.get(\"\".concat(this.orderUrl, \"?page=\").concat(page, \"&size=\").concat(size)).pipe();\n  };\n  OrderService.prototype.show = function (id) {\n    return this.http.get(\"\".concat(this.orderUrl, \"/\").concat(id)).pipe(catchError(function (_) {\n      return of(null);\n    }));\n  };\n  OrderService.prototype.cancel = function (id) {\n    return this.http.patch(\"\".concat(this.orderUrl, \"/cancel/\").concat(id), null).pipe(catchError(function (_) {\n      return of(null);\n    }));\n  };\n  OrderService.prototype.finish = function (id) {\n    return this.http.patch(\"\".concat(this.orderUrl, \"/finish/\").concat(id), null).pipe(catchError(function (_) {\n      return of(null);\n    }));\n  };\n  OrderService.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrderService;\n}();\nexport { OrderService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}