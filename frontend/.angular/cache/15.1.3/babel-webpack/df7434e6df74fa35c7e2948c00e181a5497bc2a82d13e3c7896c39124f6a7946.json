{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { apiUrl } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar CnnService = /** @class */function () {\n  function CnnService(http) {\n    this.http = http;\n    this.cnnUrl = \"\".concat(apiUrl, \"/cnn\");\n  }\n  CnnService.prototype.getCategoryRoute = function (imagelink) {\n    var url = \"\".concat(this.cnnUrl, \"?imagelink=\").concat(imagelink);\n    return this.http.get(url).pipe(\n\n      // tap(_ => console.log(_)),\n    );\n  };\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\n  CnnService.prototype.handleError = function (operation, result) {\n    if (operation === void 0) {\n      operation = 'operation';\n    }\n    return function (error) {\n      console.error(error); // log to console instead\n      // Let the app keep running by returning an empty result.\n      return of(result);\n    };\n  };\n  CnnService.ɵfac = function CnnService_Factory(t) {\n    return new (t || CnnService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CnnService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CnnService,\n    factory: CnnService.ɵfac,\n    providedIn: 'root'\n  });\n  return CnnService;\n}();\nexport { CnnService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}